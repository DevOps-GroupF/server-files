networks:
  itu-minitwit-network:
    external: false
    name: itu-minitwit-network

services:
  minitwit-service:
    container_name: minitwit-container
    image: ghcr.io/devops-groupf/itu-minitwit-devops:latest
    environment:
      - DB_CONN_STRING=${DB_CONN_STRING}
    ports:
      - 8080:8080
    depends_on:
      - grafana
      - prometheus
    networks:
      - itu-minitwit-network

  prometheus:
    image: prom/prometheus:v2.51.0-rc.0
    container_name: prometheus-container
    volumes:
      - prometheus_data:/prometheus
      - ./configuration_files/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - itu-minitwit-network

  grafana:
    image: grafana/grafana:10.2.4
    container_name: grafana-container
    ports:
      - "3000:3000"
    networks:
      - itu-minitwit-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASS}
      - DB_CONN_URL=${DB_CONN_URL}
      - DB_CONN_USER=${DB_CONN_USER}
      - DB_CONN_PASSWORD=${DB_CONN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configuration_files/grafana_dashboard_setup.yaml:/etc/grafana/provisioning/dashboards/grafana_dashboard_setup.yaml
      - ./configuration_files/grafana_dashboard_0.json:/var/lib/grafana/dashboards/grafana_dashboard_0.json
      - ./configuration_files/grafana_dashboard_1.json:/var/lib/grafana/dashboards/grafana_dashboard_1.json
      - ./configuration_files/prometheus_datasource.yaml:/etc/grafana/provisioning/datasources/prometheus_datasource.yaml
  setup:
    profiles:
      - setup
    build:
      context: ./MiniTwitLogging/setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./MiniTwitLogging/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./MiniTwitLogging/setup/lib.sh:/lib.sh:ro,Z
      - ./MiniTwitLogging/setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - itu-minitwit-network
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: ./MiniTwitLogging/elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./MiniTwitLogging/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - itu-minitwit-network
    restart: unless-stopped

  logstash:
    build:
      context: ./MiniTwitLogging/logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./MiniTwitLogging/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./MiniTwitLogging/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - itu-minitwit-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

  filebeat:
    extends:
      file: ./MiniTwitLogging/extensions/filebeat/filebeat-compose.yml
      service: filebeat

  kibana:
    build:
      context: ./MiniTwitLogging/kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./MiniTwitLogging/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - 5601:5601
    environment:
      #- ELASTICSEARCH_URL=http://localhost:9200
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - itu-minitwit-network
    depends_on:
      - elasticsearch
    restart: unless-stopped

volumes:
  grafana_data:
  prometheus_data:
  elasticsearch:
